"use strict";(self.webpackChunkcibi_general_documentation=self.webpackChunkcibi_general_documentation||[]).push([[5006],{1628:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"code-docs/OCR/dev-documentation","title":"\ud83d\udd0d OCR-API: Document Extraction System","description":"\ud83e\uddf0 Technology Stack","source":"@site/docs/code-docs/OCR/dev-documentation.md","sourceDirName":"code-docs/OCR","slug":"/code-docs/OCR/dev-documentation","permalink":"/CIBI_General_Documentation/docs/code-docs/OCR/dev-documentation","draft":false,"unlisted":false,"editUrl":"https://github.com/RusselG21/CIBI_General_Documentation/docs/code-docs/OCR/dev-documentation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"CodeDocSidebar","next":{"title":"\ud83d\ude80 Vertical Slice Architecture in .NET 9","permalink":"/CIBI_General_Documentation/docs/code-docs/restful-api/api-architecture"}}');var i=t(4848),r=t(8453);const o={},c="\ud83d\udd0d OCR-API: Document Extraction System",a={},l=[{value:"\ud83e\uddf0 Technology Stack",id:"-technology-stack",level:2},{value:"\ud83d\udcbb What Powers Our System",id:"-what-powers-our-system",level:3},{value:"\ud83e\udde9 Main Building Blocks",id:"-main-building-blocks",level:3},{value:"\ud83d\udd04 Connected Systems",id:"-connected-systems",level:3},{value:"\u2699\ufe0f How Document Processing Works",id:"\ufe0f-how-document-processing-works",level:2},{value:"\ud83d\uddfa\ufe0f Dictionary Mapping Structure",id:"\ufe0f-dictionary-mapping-structure",level:3},{value:"\ud83d\udd04 Technical Process Flow",id:"-technical-process-flow",level:3},{value:"\ud83d\udcca Processing Flow Diagram",id:"-processing-flow-diagram",level:3},{value:"\ud83d\udd04 Background Service",id:"-background-service",level:2},{value:"\u23f1\ufe0f Automatic Document Processing",id:"\ufe0f-automatic-document-processing",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"-ocr-api-document-extraction-system",children:"\ud83d\udd0d OCR-API: Document Extraction System"})}),"\n",(0,i.jsx)(n.h2,{id:"-technology-stack",children:"\ud83e\uddf0 Technology Stack"}),"\n",(0,i.jsx)(n.h3,{id:"-what-powers-our-system",children:"\ud83d\udcbb What Powers Our System"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Python"}),": A user-friendly programming language that helps our system process information quickly and efficiently - think of it as the brain of our operation."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-main-building-blocks",children:"\ud83e\udde9 Main Building Blocks"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ud83d\udd24 Text Recognition Technology"}),': Our system can "read" text from images and documents, similar to how humans read but done by a computer.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ud83d\udcd1 Specialized Document Processors"}),": We have different tools designed to handle specific types of documents:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\ud83d\udcdd Resume Processor: Understands and extracts information from job applications"}),"\n",(0,i.jsx)(n.li,{children:"\ud83d\udc76 Birth Certificate Processor: Pulls important details from birth records"}),"\n",(0,i.jsx)(n.li,{children:"\ud83e\udeaa ID Document Processor: Works with driver's licenses, passports, and other identification"}),"\n",(0,i.jsx)(n.li,{children:"\ud83c\udf93 Academic Certificate Processor: Handles diplomas and educational records"}),"\n",(0,i.jsx)(n.li,{children:"\ud83d\udc77\u200d\u2642\ufe0f Work Permit Processor: Manages employment authorization documents"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-connected-systems",children:"\ud83d\udd04 Connected Systems"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u2601\ufe0f Google Drive Connection"}),": After we process your documents, we store them securely in Google Drive - similar to saving files in a digital filing cabinet."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ud83d\udcca Airtable Connection"}),": We organize all the extracted information in Airtable - think of this as a smart spreadsheet that keeps everything organized."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\ufe0f-how-document-processing-works",children:"\u2699\ufe0f How Document Processing Works"}),"\n",(0,i.jsx)(n.p,{children:"Our document processing pipeline uses a series of technical components to manage, identify, and extract information. Here's how it works:"}),"\n",(0,i.jsx)(n.h3,{id:"\ufe0f-dictionary-mapping-structure",children:"\ud83d\uddfa\ufe0f Dictionary Mapping Structure"}),"\n",(0,i.jsx)(n.p,{children:"The system relies on four key dictionaries to manage the extraction flow:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"CONSTANT_COLUMN"}),": Maps confirmation keys to upload keys"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'CONSTANT_COLUMN = {\n    "Extracted TIN Number Upload Confirmation": "TIN Number Upload",\n    "Extracted Birth Certificate Confirmation": "Birth Certificate",\n    "Extracted Occupational Permit Confirmation": "Occupational Permit",\n    "Extracted SSS ID Upload Confirmation": "SSS ID Upload",\n    "Extracted UMID Number Upload Confirmation": "UMID Number Upload",\n    "Extracted Upload Resume Confirmation": "Upload Resume",\n    "Extracted School Records Confirmation": "School Records"\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"CONSTANT_COLUMN_EXTRACTED"}),": Maps upload keys to extracted data fields"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'CONSTANT_COLUMN_EXTRACTED = {\n    "TIN Number Upload": "Extracted TIN Number Upload",\n    "Birth Certificate": "Extracted Birth Certificate",\n    "Occupational Permit": "Extracted Occupational Permit",\n    "SSS ID Upload": "Extracted SSS ID Upload",\n    "UMID Number Upload": "Extracted UMID Number Upload",\n    "Upload Resume": "Extracted Upload Resume",\n    "School Records": "Extracted School Records"\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DOCUMENT_REQUIREMENTS"}),": Associates extraction functions with document types"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'DOCUMENT_REQUIREMENTS = {\n    "extract_birth_cert": ["Birth Certificate"],\n    "extract_cv": ["Upload Resume"],\n    "extract_id": ["SSS ID Upload", "UMID Number Upload", "TIN Number Upload"],\n    "extract_diploma": ["School Records"],\n    "extract_working_permit": ["Occupational Permit"]\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"EXTRACTOR_MAP"}),": Links extraction functions to their processor classes"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'EXTRACTOR_MAP = {\n    "extract_birth_cert": BirthCertExtractor,\n    "extract_cv": CVExtractor,\n    "extract_id": IDExtractor,\n    "extract_diploma": DiplomaExtractor,\n    "extract_working_permit": WorkPerminExtractor\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-technical-process-flow",children:"\ud83d\udd04 Technical Process Flow"}),"\n",(0,i.jsx)(n.p,{children:"When a document enters our system, it undergoes this technical process:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Document Ingestion"}),": The document is submitted via API endpoint or picked up by the automatic background service."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Attachment Verification"}),": The system checks if the document has an attachment by examining if the corresponding key in ",(0,i.jsx)(n.code,{children:"CONSTANT_COLUMN"}),' contains "No Attachment".']}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Processing Assessment"}),": If the document has an attachment and needs processing, the system proceeds to extraction."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Extractor Function Mapping"}),": The system identifies the document type and maps it to the appropriate extraction function using the ",(0,i.jsx)(n.code,{children:"DOCUMENT_REQUIREMENTS"})," dictionary."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Processor Class Selection"}),": It retrieves the corresponding processor class via the ",(0,i.jsx)(n.code,{children:"EXTRACTOR_MAP"})," dictionary (e.g., CVExtractor, IDExtractor)."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Information Extraction"}),": The processor class parses the document using OCR technology and structures the data according to predefined schemas."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Cloud Storage"}),": The processed data is stored in Google Drive with appropriate metadata."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Database Update"}),": The system updates Airtable using the ",(0,i.jsx)(n.code,{children:"CONSTANT_COLUMN_EXTRACTED"})," dictionary to map fields correctly."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This technical pipeline ensures efficient document processing with appropriate routing based on document types. The system runs both on-demand via API endpoints and automatically through a scheduled background service."}),"\n",(0,i.jsx)(n.h3,{id:"-processing-flow-diagram",children:"\ud83d\udcca Processing Flow Diagram"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'                                  +----------------+\n                                  | Document Input |\n                                  +-------+--------+\n                                          |\n                                          v\n  +------------------+           +-----------------+\n  | CONSTANT_COLUMN  |----------\x3e| Check if "No    |\n  +------------------+           | Attachment"     |\n                                 +--------+--------+\n                                          |\n                                          v\n+--------------------+          +------------------+\n| JSON Response Data |---------\x3e| Document needs   |<-------+\n+--------------------+          | extraction?      |        |\n                                +--------+---------+        |\n                                         |                  |\n                                         v                  |\n  +--------------------+        +------------------+        |\n  | DOCUMENT_          |-------\x3e| Map to extractor |        |\n  | REQUIREMENTS       |        | function         |        |\n  +--------------------+        +--------+---------+        |\n                                         |                  |\n                                         v                  |\n  +------------------+          +------------------+        |\n  | EXTRACTOR_MAP    |---------\x3e| Select extractor |        |\n  +------------------+          | class            |        |\n                                +--------+---------+        |\n                                         |                  |\n                                         v                  |\n                               +-------------------+        |\n                               | Extract document  |        |\n                               | data              |        |\n                               +--------+----------+        |\n                                        |                   |\n                                        v                   |\n                               +-------------------+        |\n                               | Save to Google    |        |\n                               | Drive             |        |\n                               +--------+----------+        |\n                                        |                   |\n                                        v                   |\n                               +-------------------+        |\n                               | Upload to Airtable|--------+\n                               +-------------------+\n'})}),"\n",(0,i.jsx)(n.h2,{id:"-background-service",children:"\ud83d\udd04 Background Service"}),"\n",(0,i.jsx)(n.p,{children:"Our system includes a helpful automated assistant that works behind the scenes:"}),"\n",(0,i.jsx)(n.h3,{id:"\ufe0f-automatic-document-processing",children:"\u23f1\ufe0f Automatic Document Processing"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\ud83e\udd16 Always Working"}),": Our background service runs continuously, checking for new documents every 60 seconds - like having an assistant who never sleeps!"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\ud83d\udd0d What It Does"}),": This service automatically:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Checks Airtable for new document submissions"}),"\n",(0,i.jsx)(n.li,{children:"Downloads any new files it finds"}),"\n",(0,i.jsx)(n.li,{children:"Determines what type of documents they are"}),"\n",(0,i.jsx)(n.li,{children:"Processes them using the appropriate specialist"}),"\n",(0,i.jsx)(n.li,{children:"Uploads the results back to Google Drive"}),"\n",(0,i.jsx)(n.li,{children:"Updates Airtable with the extracted information"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u26a1 Benefits"}),": This automation means:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"No manual triggering needed"}),"\n",(0,i.jsx)(n.li,{children:"Documents are processed promptly"}),"\n",(0,i.jsx)(n.li,{children:"Information flows smoothly into your systems"}),"\n",(0,i.jsx)(n.li,{children:"Everything stays up-to-date without human intervention"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The background service ensures that your document processing pipeline runs efficiently and continuously, providing a seamless experience for all users of the system. \ud83d\ude80"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);